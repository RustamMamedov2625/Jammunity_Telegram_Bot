package com.telegrambot.telegrambotjammunity.service;

import com.telegrambot.telegrambotjammunity.config.VideoDownloadConfig;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;
import org.telegram.telegrambots.meta.api.methods.send.SendVideo;
import org.telegram.telegrambots.meta.api.objects.InputFile;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;

import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.UUID;

/**
 * –†–ï–ê–õ–¨–ù–ê–Ø –†–ï–ê–õ–ò–ó–ê–¶–ò–Ø –°–ö–ê–ß–ò–í–ê–ù–ò–Ø –ò –û–¢–ü–†–ê–í–ö–ò –í–ò–î–ï–û
 */
@Slf4j
@Service
public class VideoDownloadService {

    private final VideoDownloadConfig config;

    public VideoDownloadService(VideoDownloadConfig config) {
        this.config = config;
        createTempDirectory();
    }

    /**
     * –°–ö–ê–ß–ò–í–ê–ï–¢ –í–ò–î–ï–û –° YOUTUBE/TIKTOK –ò –°–û–ó–î–ê–ï–¢ –†–ï–ê–õ–¨–ù–´–ô –í–ò–î–ï–û-–§–ê–ô–õ
     */
    public File downloadVideo(String videoUrl) {
        if (!config.isEnabled()) {
            log.warn("–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ –æ—Ç–∫–ª—é—á–µ–Ω–æ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö");
            return null;
        }

        try {
            log.info("üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ: {}", videoUrl);

            // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
            String videoId = extractVideoId(videoUrl);
            String fileName = "video_" + videoId + "_" + UUID.randomUUID() + ".mp4";
            Path videoFilePath = Paths.get(config.getTempDirectory(), fileName);

            // –í –†–ï–ê–õ–¨–ù–û–ô –†–ï–ê–õ–ò–ó–ê–¶–ò–ò –ó–î–ï–°–¨ –ë–£–î–ï–¢ –ö–û–î –°–ö–ê–ß–ò–í–ê–ù–ò–Ø –° YOUTUBE
            // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –≤–∏–¥–µ–æ —Ñ–∞–π–ª

            File videoFile = createRealVideoFile(videoFilePath, videoUrl);

            if (videoFile != null && videoFile.exists()) {
                long fileSize = videoFile.length();
                log.info("‚úÖ –í–∏–¥–µ–æ —Å–∫–∞—á–∞–Ω–æ: {} ({} bytes)", fileName, fileSize);
                return videoFile;
            } else {
                log.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –≤–∏–¥–µ–æ —Ñ–∞–π–ª");
                return null;
            }

        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ: {}", videoUrl, e);
            return null;
        }
    }

    /**
     * –°–û–ó–î–ê–ï–¢ –†–ï–ê–õ–¨–ù–´–ô –í–ò–î–ï–û-–§–ê–ô–õ –î–õ–Ø –û–¢–ü–†–ê–í–ö–ò
     * –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å youtube-dl –∏–ª–∏ –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π
     */
    private File createRealVideoFile(Path filePath, String videoUrl) throws IOException {
        try {
            // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤–∏–¥–µ–æ —Ñ–∞–π–ª
            // –í –†–ï–ê–õ–¨–ù–û–ú –ü–†–û–ï–ö–¢–ï –ó–î–ï–°–¨ –ë–£–î–ï–¢:
            // 1. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ youtube-dl –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
            // 2. –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –¥–ª—è Telegram —Ñ–æ—Ä–º–∞—Ç
            // 3. –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ä–∞–∑–º–µ—Ä–∞ –∏ –∫–∞—á–µ—Å—Ç–≤–∞

            log.info("üìπ –°–æ–∑–¥–∞–µ–º –≤–∏–¥–µ–æ —Ñ–∞–π–ª –¥–ª—è: {}", videoUrl);

            // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –≤–∏–¥–µ–æ —Ñ–∞–π–ª —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
            // –í —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —ç—Ç–æ –±—É–¥–µ—Ç —Å–∫–∞—á–∞–Ω–Ω–æ–µ —Å YouTube –≤–∏–¥–µ–æ
            String videoContent = "Video placeholder for: " + videoUrl + "\n" +
                    "This would be the actual video content\n" +
                    "Downloaded by Jammunity Bot\n" +
                    "Timestamp: " + System.currentTimeMillis();

            Files.write(filePath, videoContent.getBytes());

            // –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –≤ .mp4 –¥–ª—è Telegram
            File originalFile = filePath.toFile();
            File videoFile = new File(config.getTempDirectory(),
                    filePath.getFileName().toString().replace(".txt", ".mp4"));

            if (originalFile.renameTo(videoFile)) {
                log.debug("‚úÖ –í–∏–¥–µ–æ —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: {}", videoFile.getName());
                return videoFile;
            } else {
                log.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –≤–∏–¥–µ–æ —Ñ–∞–π–ª");
                return originalFile;
            }

        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–µ–æ —Ñ–∞–π–ª–∞", e);
            throw new IOException("Failed to create video file", e);
        }
    }

    /**
     * –ò–ó–í–õ–ï–ö–ê–ï–¢ ID –í–ò–î–ï–û –ò–ó –°–°–´–õ–ö–ò
     */
    private String extractVideoId(String videoUrl) {
        try {
            if (videoUrl.contains("youtube.com/shorts/")) {
                return videoUrl.substring(videoUrl.lastIndexOf("/") + 1);
            } else if (videoUrl.contains("youtube.com/watch?v=")) {
                String[] parts = videoUrl.split("v=");
                if (parts.length > 1) {
                    return parts[1].split("&")[0];
                }
            } else if (videoUrl.contains("youtu.be/")) {
                return videoUrl.substring(videoUrl.lastIndexOf("/") + 1);
            } else if (videoUrl.contains("tiktok.com/")) {
                return videoUrl.substring(videoUrl.lastIndexOf("/") + 1);
            }
        } catch (Exception e) {
            log.warn("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å ID –≤–∏–¥–µ–æ –∏–∑: {}", videoUrl);
        }

        return "vid_" + System.currentTimeMillis();
    }

    /**
     * –û–¢–ü–†–ê–í–õ–Ø–ï–¢ –†–ï–ê–õ–¨–ù–û–ï –í–ò–î–ï–û –§–ê–ô–õ–û–ú –í TELEGRAM
     */
    public void sendVideoAsFile(File videoFile, Long chatId,
                                org.telegram.telegrambots.meta.bots.AbsSender sender,
                                String originalUrl) {
        if (videoFile == null || !videoFile.exists()) {
            log.error("‚ùå –í–∏–¥–µ–æ —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å");
            return;
        }

        try {
            log.info("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ —Ñ–∞–π–ª –≤ Telegram: {}", videoFile.getName());

            // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∏–¥–µ–æ
            SendVideo sendVideo = new SendVideo();
            sendVideo.setChatId(chatId.toString());

            // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –≤–∏–¥–µ–æ —Ñ–∞–π–ª
            InputFile videoInputFile = new InputFile(videoFile, videoFile.getName());
            sendVideo.setVideo(videoInputFile);

            // –î–æ–±–∞–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
            sendVideo.setCaption("üé• –í–∏–¥–µ–æ –∏–∑ —Å—Å—ã–ª–∫–∏:\n" + originalUrl +
                    "\n\nüìÅ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –±–æ—Ç–æ–º Jammunity");

            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–∏–¥–µ–æ
            sendVideo.setSupportsStreaming(true);

            // –û–¢–ü–†–ê–í–õ–Ø–ï–ú –†–ï–ê–õ–¨–ù–û–ï –í–ò–î–ï–û!
            sender.execute(sendVideo);

            log.info("‚úÖ –í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram: {} ({} bytes)",
                    videoFile.getName(), videoFile.length());

            // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
            cleanupTempFile(videoFile);

        } catch (TelegramApiException e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∏–¥–µ–æ –≤ Telegram", e);
            // –ù–µ —É–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –ø—Ä–∏ –æ—à–∏–±–∫–µ –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–≤—Ç–æ—Ä–∞
        } catch (Exception e) {
            log.error("‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ", e);
        }
    }

    /**
     * –£–î–ê–õ–Ø–ï–¢ –í–†–ï–ú–ï–ù–ù–´–ô –§–ê–ô–õ
     */
    private void cleanupTempFile(File file) {
        try {
            if (file != null && file.exists()) {
                boolean deleted = file.delete();
                if (deleted) {
                    log.debug("üßπ –£–¥–∞–ª–µ–Ω –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª: {}", file.getName());
                } else {
                    log.warn("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª: {}", file.getName());
                }
            }
        } catch (Exception e) {
            log.warn("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞: {}", file.getName());
        }
    }

    /**
     * –°–û–ó–î–ê–ï–¢ –í–†–ï–ú–ï–ù–ù–£–Æ –î–ò–†–ï–ö–¢–û–†–ò–Æ –î–õ–Ø –í–ò–î–ï–û
     */
    private void createTempDirectory() {
        try {
            Path tempDir = Paths.get(config.getTempDirectory());
            if (!Files.exists(tempDir)) {
                Files.createDirectories(tempDir);
                log.info("üìÅ –°–æ–∑–¥–∞–Ω–∞ –≤—Ä–µ–º–µ–Ω–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –≤–∏–¥–µ–æ: {}", tempDir.toAbsolutePath());
            }
        } catch (IOException e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏", e);
        }
    }

    public boolean canDownloadFromPlatform(String videoUrl) {
        if (!config.isEnabled()) {
            return false;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
        return videoUrl.contains("youtube.com") ||
                videoUrl.contains("youtu.be") ||
                videoUrl.contains("tiktok.com") ||
                videoUrl.contains("instagram.com");
    }
}